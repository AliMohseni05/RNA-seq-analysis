# -*- coding: utf-8 -*-
"""snakemake.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1y9RAuPvgqz40KzgRy2YO-1x0bYU5nca-

#instal part
"""

!wget -c https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
!chmod +x Miniconda3-latest-Linux-x86_64.sh
!bash ./Miniconda3-latest-Linux-x86_64.sh -b -f -p /usr/local
import sys
sys.path.append('/usr/local/lib/python3.8/site-packages')

!conda init bash
!source ~/.bashrc

!conda install -c bioconda hisat2

!conda install -c conda-forge -c bioconda -y snakemake

!pip install snakemake

"""#simple esample"""

!wget https://ftp.ensemblgenomes.ebi.ac.uk/pub/plants/release-61/fasta/solanum_lycopersicum/dna/Solanum_lycopersicum.SL3.0.dna.toplevel.fa.gz
!wget https://ftp.ensemblgenomes.ebi.ac.uk/pub/plants/release-61/gff3/solanum_lycopersicum/Solanum_lycopersicum.SL3.0.61.chr.gff3.gz

!mkdir resources
!gunzip /content/Solanum_lycopersicum.SL3.0.61.chr.gff3.gz
!gunzip /content/Solanum_lycopersicum.SL3.0.dna.toplevel.fa.gz

# Commented out IPython magic to ensure Python compatibility.
# %%writefile config.yaml
# # Reference files
# genome: "resources/Solanum_lycopersicum.SL3.0.dna.toplevel.fa"
# annotation: "resources/Solanum_lycopersicum.SL3.0.61.chr.gff3"
# 
# # Trimmomatic parameters
# trimmomatic:
#   adapters: "TruSeq3-SE.fa"
#   leading: 20
#   trailing: 20
#   sliding_window: "4:20"
#   minlen: 36
# 
# # HTSeq parameters
# htseq:
#   stranded: "no"
#   idattr: "ID"
# 
# #hist2 installtion
# name: snakemake
# channels:
#   - conda-forge
#   - bioconda
# dependencies:
#   - snakemake = 9.5.1
#   - hisat2 = 2.2.0
#   - samtools = 1.21
# 
#

# Commented out IPython magic to ensure Python compatibility.
# %%writefile Snakefile
# # Snakefile for Tomato RNA-seq Analysis Pipeline
# import os
# 
# configfile: "config.yaml"
# 
# # Define SRA accessions
# SRR_IDS = [f"SRR987959{i}" for i in range(4, 10)] + [f"SRR98796{i}" for i in range(0, 6)]
# 
# # Reference files
# GENOME = config["genome"]
# GTF = config["annotation"]
# 
# rule all:
#     input:
#         expand("results/counts/{srr}.counts.txt", srr=SRR_IDS),
#         "multiqc_report.html"
# 
# # SRA Download
# rule download_sra:
#     output:
#         "data/raw/{srr}.fastq"
#     params:
#         prefetch_dir=temp("data/raw/.prefetch/{srr}")
#     log:
#         "logs/sra/{srr}.log"
#     wrapper:
#         "v1.2.0/bio/sra-tools/fasterq-dump"
# 
# # FastQC Raw
# rule fastqc_raw:
#     input:
#         "data/raw/{srr}.fastq"
#     output:
#         html="results/fastqc/raw/{srr}_fastqc.html",
#         zip="results/fastqc/raw/{srr}_fastqc.zip"
#     log:
#         "logs/fastqc/raw/{srr}.log"
#     threads: 2
#     wrapper:
#         "v1.2.0/bio/fastqc"
# 
# # Trimmomatic
# rule trim:
#     input:
#         "data/raw/{srr}.fastq"
#     output:
#         trimmed="data/trimmed/{srr}.trimmed.fastq",
#         unpaired="data/trimmed/{srr}.unpaired.fastq"
#     params:
#         adapters=config["trimmomatic"]["adapters"],
#         leading=20,
#         trailing=20,
#         sliding_window="4:20",
#         minlen=36
#     log:
#         "logs/trimmomatic/{srr}.log"
#     threads: 4
#     wrapper:
#         "v1.2.0/bio/trimmomatic/se"
# 
# # FastQC Trimmed
# rule fastqc_trimmed:
#     input:
#         "data/trimmed/{srr}.trimmed.fastq"
#     output:
#         html="results/fastqc/trimmed/{srr}_trimmed_fastqc.html",
#         zip="results/fastqc/trimmed/{srr}_trimmed_fastqc.zip"
#     log:
#         "logs/fastqc/trimmed/{srr}.log"
#     threads: 2
#     wrapper:
#         "v1.2.0/bio/fastqc"
# 
# # HISAT2 Index
# rule hisat2_index:
#     input:
#         "resources/Solanum_lycopersicum.SL3.0.dna.toplevel.fa"
#     output:
#         index=directory("resources/hisat2_index")
#     params:
#         prefix="resources/hisat2_index/tomato"
#     log:
#         "logs/hisat2/index.log"
#     threads: 8
#     shell:
#         """
#         mkdir -p logs/hisat2
#         hisat2-build -p {threads} {input} reference_index {params.prefix}  > {log} 2>&1
#         """
# 
# # HISAT2 Alignment
# rule hisat2_align:
#     input:
#         fastq="data/trimmed/{srr}.trimmed.fastq",
#         index=directory("resources/hisat2_index")
#     output:
#         "results/aligned/{srr}.sam"
#     params:
#         index_prefix="resources/hisat2_index/tomato"
#     log:
#         "logs/hisat2/{srr}.log"
#     threads: 8
#     shell:
#         "hisat2 -x {params.index_prefix} -U {input.fastq} -S {output} "
#         "--threads {threads} --dta --summary-file {log}"
# 
# # SAM to BAM
# rule samtools_sort:
#     input:
#         "results/aligned/{srr}.sam"
#     output:
#         "results/aligned/{srr}.sorted.bam"
#     log:
#         "logs/samtools/{srr}.sort.log"
#     threads: 4
#     shell:
#         "samtools sort -@ {threads} -o {output} {input} > {log} 2>&1"
# 
# 
# # HTSeq Count
# rule htseq_count:
#     input:
#         bam="results/aligned/{srr}.sorted.bam",
#         gff=GTF
#     output:
#         "results/counts/{srr}.counts.txt"
#     log:
#         "logs/htseq/{srr}.log"
#     threads: 1
#     shell:
#         """
#         htseq-count -f bam -r pos -s no -t exon -i ID {input.bam} {input.gff} > {output} 2> {log}
#         """
# 
# 
# # MultiQC Report
# rule multiqc:
#     input:
#         fastqc_raw=expand("results/fastqc/raw/{srr}_fastqc.zip", srr=SRR_IDS),
#         fastqc_trimmed=expand("results/fastqc/trimmed/{srr}_trimmed_fastqc.zip", srr=SRR_IDS),
#         trimmomatic_logs=expand("logs/trimmomatic/{srr}.log", srr=SRR_IDS),
#         bam_files=expand("results/aligned/{srr}.sorted.bam", srr=SRR_IDS)
#     output:
#         "multiqc_report.html"
#     shell:
#         """
#         multiqc results/fastqc/raw results/fastqc/trimmed logs/trimmomatic results/aligned -o .
#         """
# 
#

!mv Solanum_lycopersicum.SL3.0.dna.toplevel.fa Solanum_lycopersicum.SL3.0.61.chr.gff3 resources/

!snakemake --cores 4 --dry-run

!snakemake --cores 8 hisat2_index

!snakemake --cores 4 --use-conda

!snakemake -s Snakefile_pipeline_1 -j 15
!snakemake -s Snakefile_pipeline_2 -j 40
!snakemake -s Snakefile_pipeline_3 -j 10

!touch snakefile3

!conda install -c bioconda htseq

SRR_IDS = [f"SRR98795{i:02d}" for i in range(94, 106)]  # SRR9879594 to SRR9879605
print(SRR_IDS)

SRR_IDS = [f"SRR987959{i}" for i in range(4, 10)] + [f"SRR98796{i}" for i in range(0, 6)]
print(SRA_IDS)

!wget https://cloud.biohpc.swmed.edu/index.php/s/hisat2-220-download/download -O hisat2.zip
!unzip hisat2.zip

!conda install -c bioconda hisat2 -y

!sudo apt-get update
!sudo apt-get -y install hisat2

!head resources/Solanum_lycopersicum.SL3.0.dna.toplevel.fa

!hisat2-build --version

"""#git setion"""

!git clone https://github.com/AliMohseni05/rna-seq-snakemake.git

!git config --global user.email "skysly42@gmail.com"
!git config --global user.name "colab sky"

# Commented out IPython magic to ensure Python compatibility.
# %cd rna-seq-snakemake

!git add .
!git commit -m "Update from Colab"

!git remote add upstream https://github.com/AliMohseni05/rna-seq-snakemake.git

!git remote -v

!git push https://USERNAME:TOKEN@github.com/AliMohseni05/rna-seq-snakemake.git
